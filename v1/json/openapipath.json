
  "{schema}": {
    "get": {
      "description": "Returns all {Schema}s from the system that the user has access to",
      "operationId": "find{Schema}",
      "externalDocs": {
        "description": "find more info here",
        "url": "https://aliconnect.nl/about"
      },
      "produces": [
        "application/json",
        "text/html"
      ],
      "parameters": [
        {
          "name": "q",
          "in": "query",
          "description": "search value to filter by",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "csv"
        },
        {
          "name": "tags",
          "in": "query",
          "description": "tags to search",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "csv"
        },
        {
          "name": "filter",
          "in": "query",
          "description": "clauses to filter",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "csv"
        },
        {
          "name": "limit",
          "in": "query",
          "description": "maximum number of results to return",
          "required": false,
          "type": "integer",
          "format": "int32"
        }
      ],
      "responses": {
        "200": {
          "description": "{schema} response",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/{Schema}"
            }
          }
        },
        "default": {
          "description": "unexpected error",
          "schema": {
            "$ref": "#/definitions/ErrorModel"
          }
        }
      }
    },
    "post": {
      "description": "Creates a new {Schema}.",
      "operationId": "add{schema}",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "{schema}",
          "in": "body",
          "description": "{schema} to add to the store",
          "required": true,
          "schema": {
            "$ref": "#/definitions/{Schema}"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "{schema} response",
          "schema": {
            "$ref": "#/definitions/{Schema}"
          }
        },
        "default": {
          "description": "unexpected error",
          "schema": {
            "$ref": "#/definitions/ErrorModel"
          }
        }
      }
    }
  },
  "{schema}/{id}": {
    "get": {
      "description": "Returns a {schema} based on a single ID, if the user does not have access to the {schema}",
      "operationId": "find{Schema}ById",
      "produces": [
        "application/json",
        "application/xml",
        "text/xml",
        "text/html"
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of {schema} to fetch",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "{schema} response",
          "schema": {
            "$ref": "#/definitions/{Schema}"
          }
        },
        "default": {
          "description": "unexpected error",
          "schema": {
            "$ref": "#/definitions/ErrorModel"
          }
        }
      }
    },
    "post": {
      "description": "Returns a {schema} based on a single ID, if the user does not have access to the {schema}",
      "operationId": "update{Schema}ById",
      "produces": [
        "application/json",
        "application/xml",
        "text/xml",
        "text/html"
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of {schema} to fetch",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "{schema} response",
          "schema": {
            "$ref": "#/definitions/{Schema}"
          }
        },
        "default": {
          "description": "unexpected error",
          "schema": {
            "$ref": "#/definitions/ErrorModel"
          }
        }
      }
    },
    "delete": {
      "description": "deletes a single {schema} based on the ID supplied",
      "operationId": "delete{Schema}",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of {schema} to delete",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {
          "description": "{schema} deleted"
        },
        "default": {
          "description": "unexpected error",
          "schema": {
            "$ref": "#/definitions/ErrorModel"
          }
        }
      }
    }
  }
